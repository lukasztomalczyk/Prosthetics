@using System.Diagnostics.CodeAnalysis
@using Prosthetics.Components.Enums

<RadzenButton Shade="Shade.Darker" Text="@Text" Click="@ButtonClicked" Icon="@ChooseIcon()" ButtonStyle="@ChooseButtonStyle()"></RadzenButton>

@code {
    [Parameter, AllowNull]
    public string Text { get; set; }

    [Parameter]
    public EventCallback OnButtonClick { get; set; }

    [Parameter, AllowNull]
    public TypeOfButton Type { get; set; }
    [Parameter, AllowNull]
    public StyleOfButton Style { get; set; }

    void ButtonClicked() => this.OnButtonClick.InvokeAsync();

    private string ChooseIcon() 
    {
        switch (this.Style)
        {
            case StyleOfButton.DEFAULT:
                return string.Empty;
            case StyleOfButton.CIRCLE:
                return "add_circle_outline";
            default:
                return string.Empty;
        }
    }

    private ButtonStyle ChooseButtonStyle()
    {
        switch (this.Type)
        {
            case TypeOfButton.PRIMARY:
                return ButtonStyle.Primary;
            case TypeOfButton.SECONDARY:
                return ButtonStyle.Secondary;
            case TypeOfButton.SUCCESS:
                return ButtonStyle.Success;
            case TypeOfButton.WARNING:
                return ButtonStyle.Warning;
            case TypeOfButton.DANGER:
                return ButtonStyle.Danger;
            case TypeOfButton.INFO:
                return ButtonStyle.Info;
            default:
                return ButtonStyle.Primary;
        }
    }

}
