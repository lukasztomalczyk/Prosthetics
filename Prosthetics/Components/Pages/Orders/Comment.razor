@using JuniorDevOps.Net.Http
@using Prosthetics.Common
@using Prosthetics.Components.Layout
@using Prosthetics.Features
@using Prosthetics.Api.Commands.Orders

@inject IHttpRequest _httpRequest
@inject IStore _store;
@inject NotificationService _notificationService
@inject IDialogService _dialogService;

<RadzenTextArea @bind-Value=@Comments TValue="string" Disabled="_disableTextArea" Rows="3" Cols="40" />
<br />
<ButtonComponent Text="@_buttonText" OnButtonClick="@OnButtonClick"></ButtonComponent>

@code {
    [Parameter]
    public EventCallback<string> OnCloseEvent { get; set; }
    [Parameter]
    public string Comments { get; set; } = string.Empty;

    private bool _disableTextArea = true;
    private string _buttonText = "Edytuj";

    private async Task OnButtonClick() 
    {
        if (_buttonText == "Edytuj")
        {
            _buttonText = "Zapisz zmiany";
            _disableTextArea = false;
        } 
        else
        {
            await _httpRequest.Send(new EditOrderCommand()
            { 
                Comments = this.Comments,
                OrderId = _store.Order.OrderId
            });
            _notificationService.Notify(new NotificationMessage()
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Komentarz zapisany",
                    Duration = 4000
                });
            await OnCloseEvent.InvokeAsync();
        }
    }
}
